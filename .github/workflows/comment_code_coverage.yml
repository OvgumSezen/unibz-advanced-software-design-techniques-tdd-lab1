name: Comment Code Coverage

on:
  workflow_run:
    workflows:
      - "Run Tests"
    types:
      - completed

permissions:
  pull-requests: write
  issues: write

jobs:
  comment:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up JDK 21
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      # Step 3: Cache Maven dependencies
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Step 4: Run tests and generate the JaCoCo coverage report
      - name: Run tests with JaCoCo coverage
        run: mvn clean verify jacoco:report --no-transfer-progress

      # Step 5: Upload the JaCoCo XML report as an artifact (optional for later inspection)
      - name: Upload JaCoCo XML Report
        uses: actions/upload-artifact@v3
        with:
          name: jacoco-report
          path: target/site/jacoco/jacoco.xml

      # Step 6: Get coverage percentage from JaCoCo XML
      - name: Get coverage percentage
        id: coverage
        run: |
          COVERAGE=$(grep -oPm1 "(?<=<counter type=\"INSTRUCTION\" missed=\")\d+" target/site/jacoco/jacoco.xml | awk '{missed=$1} END {print 100 - missed}')
          echo "Coverage is $COVERAGE%"
          echo "COVERAGE=$COVERAGE" >> $GITHUB_ENV

      # Step 7: Post the code coverage comment in the pull request
      - name: Post coverage comment to PR
        if: ${{ github.event.workflow_run.conclusion == 'success' }}
        uses: peter-evans/create-or-update-comment@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.workflow_run.pull_requests[0].number }}
          body: |
            ## Code Coverage Report
            - **Coverage**: ${{ env.COVERAGE }}%
